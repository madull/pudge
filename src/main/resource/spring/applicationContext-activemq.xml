<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd">
    
    
    <bean id="taskExecutor"  
    class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">  
    <!-- 核心线程数，默认为1 -->  
    <property name="corePoolSize" value="5" />  
    <!-- 最大线程数，默认为Integer.MAX_VALUE -->  
    <property name="maxPoolSize" value="20" />  
    <!-- 队列最大长度，一般需要设置值>=notifyScheduledMainExecutor.maxNum；默认为Integer.MAX_VALUE -->  
    <property name="queueCapacity" value="1000" />  
    <!-- 线程池维护线程所允许的空闲时间，默认为60s -->  
    <property name="keepAliveSeconds" value="300" />  
    <!-- 线程池对拒绝任务（无线程可用）的处理策略，目前只支持AbortPolicy、CallerRunsPolicy；默认为后者 -->  
    <property name="rejectedExecutionHandler">  
        <!-- AbortPolicy:直接抛出java.util.concurrent.RejectedExecutionException异常 -->  
        <!-- CallerRunsPolicy:主线程直接执行该任务，执行完之后尝试添加下一个任务到线程池中，可以有效降低向线程池内添加任务的速度 -->  
        <!-- DiscardOldestPolicy:抛弃旧的任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->  
        <!-- DiscardPolicy:抛弃当前任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->  
        <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />  
    </property>  
</bean>

	<!-- 连接池 -->
	<bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
		destroy-method="stop">
		<property name="connectionFactory">
			<bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<property name="brokerURL" value="tcp://localhost:61616" />  
            <property name="closeTimeout" value="60000" />  
            <property name="userName" value="admin" />  
            <property name="password" value="admin" />  
            <!--<property name="optimizeAcknowledge" value="true" />--> 
            <!-- <property name="optimizedAckScheduledAckInterval" value="10000" /> -->
			</bean>
		</property>
		<property name="maxConnections" value="100"></property>
	</bean>

	<!-- 配置消息目标 -->
	<bean id="destination" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg index="0" value="ewifi" />
	</bean>

	<!-- 消息模板 -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="pooledConnectionFactory" />
		<property name="defaultDestination" ref="destination" />
		<property name="messageConverter">
			<bean
				class="org.springframework.jms.support.converter.SimpleMessageConverter" />
		</property>
	</bean>
	<!-- <bean id="jmsContainer"  
    class="org.springframework.jms.listener.DefaultMessageListenerContainer">  
    <property name="connectionFactory" ref="jmsConnectionFactory" />  
    <property name="destination" ref="asyncTopic" />  
    <property name="messageListener" ref="messageListener" />  
    <property name="sessionTransacted" value="false" />  
</bean>  
        消息接受pojo  
<bean id="messageReceiver" class="com.cn.ld.modules.jms.worker.JmsReceiver" />  
        消息发送pojo  
<bean id="messageSender" class="com.cn.ld.modules.jms.worker.JmsSender" />  
         异步接收的消息监听器  
<bean id="messageListener"  
    class="org.springframework.jms.listener.adapter.MessageListenerAdapter">  
    <constructor-arg>  
        <ref bean="messageReceiver" />  
    </constructor-arg>  
</bean> -->


<!-- this is the Message Driven POJO (MDP) -->
 <bean id="messageListener" class="com.pudge.service.impl.ExampleListener" />

<!-- and this is the message listener container -->
<bean id="jmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
    <property name="connectionFactory" ref="pooledConnectionFactory"/>
    <property name="destination" ref="destination"/>
    <property name="messageListener" ref="messageListener" />
</bean>
</beans>